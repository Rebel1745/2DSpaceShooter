//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/_Scripts/Entities/Player/Input/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""VerticalControls"",
            ""id"": ""1429bd23-6216-4acf-bf5f-a8208da4770a"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""5a694feb-c8f9-4a9b-be8b-8d4a2eff9513"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Attack1"",
                    ""type"": ""Button"",
                    ""id"": ""f2ef06ba-a56c-4e58-b9ed-4fa4785a7bef"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack2"",
                    ""type"": ""Button"",
                    ""id"": ""fa5e2a4f-fd7f-4644-865e-ecf63affc609"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeWeapon0"",
                    ""type"": ""Button"",
                    ""id"": ""7562592f-b778-460f-8b83-970cc8a9dfab"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeWeapon1"",
                    ""type"": ""Button"",
                    ""id"": ""571768e0-831e-4f9c-8e9a-6058550cdde1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeWeapon2"",
                    ""type"": ""Button"",
                    ""id"": ""a36e2f1e-bbd8-40fc-9fb1-ab4c2412a85d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeWeapon3"",
                    ""type"": ""Button"",
                    ""id"": ""df202c87-acfb-45d9-a27d-1745dc6b9f54"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeSecondaryWeaponToggle"",
                    ""type"": ""Button"",
                    ""id"": ""da9cf847-44a0-46e2-a6f1-95bef37ac879"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c44dc1b1-7ea8-4c47-8515-6a6d686367db"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""5cd471f8-a4c6-4282-b0c2-6cc42cdd0444"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""18ae0c35-d2cb-416b-9a60-db50dfac9850"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard & Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d9dc72db-a226-4ce1-9ad0-4b3fb3350c5d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard & Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""1f72786c-45aa-4ea7-b55b-ea19a441de15"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard & Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""7db8560c-72f0-4e2c-b008-28fc0db7fea7"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard & Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""b0f95778-c096-49e4-a4f5-20ddd935935e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""61c6f4e1-8458-4f6b-a73f-6a2ec4661582"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard & Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7d78cf8e-3398-4268-96fd-251150bcca8a"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard & Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""00328876-9622-4756-8ed9-f7fff75f3f3a"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard & Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b80de50d-edc7-4190-aae2-db12fb3bd937"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard & Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""4dcf91ae-f0ec-4f95-ab3c-0a17473b685e"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard & Mouse"",
                    ""action"": ""Attack1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""27facba4-47ba-410b-abea-59edf42128b7"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard & Mouse"",
                    ""action"": ""Attack1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15628395-5e85-46e0-93aa-66b574750ef0"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Attack1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f324ef2f-575a-48a9-b46f-c70143cdd446"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard & Mouse"",
                    ""action"": ""Attack2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f6d801fc-9584-44cb-aa5e-e6ef787015ac"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard & Mouse"",
                    ""action"": ""Attack2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e504d14-745d-4120-bf9b-9f47630b8a95"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Attack2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2a3eb158-d199-433f-8631-883e60f8dc28"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard & Mouse"",
                    ""action"": ""ChangeWeapon0"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1b3244f0-6547-411b-a3de-d3996ff481d8"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""ChangeWeapon0"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e19869b-a8fe-4f1d-bb3c-b63493c0e596"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard & Mouse"",
                    ""action"": ""ChangeWeapon1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""594fddb2-8b6f-4d67-8138-04098257c2ad"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""ChangeWeapon1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e83c360-b45f-4121-a907-052846f936cf"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard & Mouse"",
                    ""action"": ""ChangeWeapon2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2bdcfe43-d78f-49d9-ad0e-0b6e630b3037"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""ChangeWeapon2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6860fcbd-a1b8-46e6-848b-8804e7303457"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard & Mouse"",
                    ""action"": ""ChangeWeapon3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f18f5f5e-1bc7-4fed-80c5-bc07ec53a75e"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""ChangeWeapon3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a6ca9ed0-fab9-4735-9a03-bff961553f09"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard & Mouse"",
                    ""action"": ""ChangeSecondaryWeaponToggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a5384a9c-626c-4a75-8818-a5e986d3a768"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""ChangeSecondaryWeaponToggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Keyboard & Mouse"",
            ""bindingGroup"": ""Keyboard & Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // VerticalControls
        m_VerticalControls = asset.FindActionMap("VerticalControls", throwIfNotFound: true);
        m_VerticalControls_Move = m_VerticalControls.FindAction("Move", throwIfNotFound: true);
        m_VerticalControls_Attack1 = m_VerticalControls.FindAction("Attack1", throwIfNotFound: true);
        m_VerticalControls_Attack2 = m_VerticalControls.FindAction("Attack2", throwIfNotFound: true);
        m_VerticalControls_ChangeWeapon0 = m_VerticalControls.FindAction("ChangeWeapon0", throwIfNotFound: true);
        m_VerticalControls_ChangeWeapon1 = m_VerticalControls.FindAction("ChangeWeapon1", throwIfNotFound: true);
        m_VerticalControls_ChangeWeapon2 = m_VerticalControls.FindAction("ChangeWeapon2", throwIfNotFound: true);
        m_VerticalControls_ChangeWeapon3 = m_VerticalControls.FindAction("ChangeWeapon3", throwIfNotFound: true);
        m_VerticalControls_ChangeSecondaryWeaponToggle = m_VerticalControls.FindAction("ChangeSecondaryWeaponToggle", throwIfNotFound: true);
    }

    ~@PlayerInputActions()
    {
        UnityEngine.Debug.Assert(!m_VerticalControls.enabled, "This will cause a leak and performance issues, PlayerInputActions.VerticalControls.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // VerticalControls
    private readonly InputActionMap m_VerticalControls;
    private List<IVerticalControlsActions> m_VerticalControlsActionsCallbackInterfaces = new List<IVerticalControlsActions>();
    private readonly InputAction m_VerticalControls_Move;
    private readonly InputAction m_VerticalControls_Attack1;
    private readonly InputAction m_VerticalControls_Attack2;
    private readonly InputAction m_VerticalControls_ChangeWeapon0;
    private readonly InputAction m_VerticalControls_ChangeWeapon1;
    private readonly InputAction m_VerticalControls_ChangeWeapon2;
    private readonly InputAction m_VerticalControls_ChangeWeapon3;
    private readonly InputAction m_VerticalControls_ChangeSecondaryWeaponToggle;
    public struct VerticalControlsActions
    {
        private @PlayerInputActions m_Wrapper;
        public VerticalControlsActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_VerticalControls_Move;
        public InputAction @Attack1 => m_Wrapper.m_VerticalControls_Attack1;
        public InputAction @Attack2 => m_Wrapper.m_VerticalControls_Attack2;
        public InputAction @ChangeWeapon0 => m_Wrapper.m_VerticalControls_ChangeWeapon0;
        public InputAction @ChangeWeapon1 => m_Wrapper.m_VerticalControls_ChangeWeapon1;
        public InputAction @ChangeWeapon2 => m_Wrapper.m_VerticalControls_ChangeWeapon2;
        public InputAction @ChangeWeapon3 => m_Wrapper.m_VerticalControls_ChangeWeapon3;
        public InputAction @ChangeSecondaryWeaponToggle => m_Wrapper.m_VerticalControls_ChangeSecondaryWeaponToggle;
        public InputActionMap Get() { return m_Wrapper.m_VerticalControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(VerticalControlsActions set) { return set.Get(); }
        public void AddCallbacks(IVerticalControlsActions instance)
        {
            if (instance == null || m_Wrapper.m_VerticalControlsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_VerticalControlsActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Attack1.started += instance.OnAttack1;
            @Attack1.performed += instance.OnAttack1;
            @Attack1.canceled += instance.OnAttack1;
            @Attack2.started += instance.OnAttack2;
            @Attack2.performed += instance.OnAttack2;
            @Attack2.canceled += instance.OnAttack2;
            @ChangeWeapon0.started += instance.OnChangeWeapon0;
            @ChangeWeapon0.performed += instance.OnChangeWeapon0;
            @ChangeWeapon0.canceled += instance.OnChangeWeapon0;
            @ChangeWeapon1.started += instance.OnChangeWeapon1;
            @ChangeWeapon1.performed += instance.OnChangeWeapon1;
            @ChangeWeapon1.canceled += instance.OnChangeWeapon1;
            @ChangeWeapon2.started += instance.OnChangeWeapon2;
            @ChangeWeapon2.performed += instance.OnChangeWeapon2;
            @ChangeWeapon2.canceled += instance.OnChangeWeapon2;
            @ChangeWeapon3.started += instance.OnChangeWeapon3;
            @ChangeWeapon3.performed += instance.OnChangeWeapon3;
            @ChangeWeapon3.canceled += instance.OnChangeWeapon3;
            @ChangeSecondaryWeaponToggle.started += instance.OnChangeSecondaryWeaponToggle;
            @ChangeSecondaryWeaponToggle.performed += instance.OnChangeSecondaryWeaponToggle;
            @ChangeSecondaryWeaponToggle.canceled += instance.OnChangeSecondaryWeaponToggle;
        }

        private void UnregisterCallbacks(IVerticalControlsActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Attack1.started -= instance.OnAttack1;
            @Attack1.performed -= instance.OnAttack1;
            @Attack1.canceled -= instance.OnAttack1;
            @Attack2.started -= instance.OnAttack2;
            @Attack2.performed -= instance.OnAttack2;
            @Attack2.canceled -= instance.OnAttack2;
            @ChangeWeapon0.started -= instance.OnChangeWeapon0;
            @ChangeWeapon0.performed -= instance.OnChangeWeapon0;
            @ChangeWeapon0.canceled -= instance.OnChangeWeapon0;
            @ChangeWeapon1.started -= instance.OnChangeWeapon1;
            @ChangeWeapon1.performed -= instance.OnChangeWeapon1;
            @ChangeWeapon1.canceled -= instance.OnChangeWeapon1;
            @ChangeWeapon2.started -= instance.OnChangeWeapon2;
            @ChangeWeapon2.performed -= instance.OnChangeWeapon2;
            @ChangeWeapon2.canceled -= instance.OnChangeWeapon2;
            @ChangeWeapon3.started -= instance.OnChangeWeapon3;
            @ChangeWeapon3.performed -= instance.OnChangeWeapon3;
            @ChangeWeapon3.canceled -= instance.OnChangeWeapon3;
            @ChangeSecondaryWeaponToggle.started -= instance.OnChangeSecondaryWeaponToggle;
            @ChangeSecondaryWeaponToggle.performed -= instance.OnChangeSecondaryWeaponToggle;
            @ChangeSecondaryWeaponToggle.canceled -= instance.OnChangeSecondaryWeaponToggle;
        }

        public void RemoveCallbacks(IVerticalControlsActions instance)
        {
            if (m_Wrapper.m_VerticalControlsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IVerticalControlsActions instance)
        {
            foreach (var item in m_Wrapper.m_VerticalControlsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_VerticalControlsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public VerticalControlsActions @VerticalControls => new VerticalControlsActions(this);
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard & Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    public interface IVerticalControlsActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnAttack1(InputAction.CallbackContext context);
        void OnAttack2(InputAction.CallbackContext context);
        void OnChangeWeapon0(InputAction.CallbackContext context);
        void OnChangeWeapon1(InputAction.CallbackContext context);
        void OnChangeWeapon2(InputAction.CallbackContext context);
        void OnChangeWeapon3(InputAction.CallbackContext context);
        void OnChangeSecondaryWeaponToggle(InputAction.CallbackContext context);
    }
}
